#pragma version 8
intcblock 0 1 32 48 832 833
bytecblock 0x 0x00 0x657363726f775f61646472657373 0x61646d696e5f61636374 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0xbec76d87 // "bootstrap()void"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x963a596e // "fund_escrow_address(pay)void"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0x0e844d7c // "list_project(asset,uint64,uint64,uint64,uint64,uint64,uint64)void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0x33755ef0 // "deposit_ido_assets(axfer,asset)void"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x6fa53472 // "invest(asset,pay)void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xea93a37d // "claim_project_asset(asset)void"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x38a41c6e // "withdraw_amount_raised(uint64)void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x90fad566 // "pause_project(uint64)void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x5eb29672 // "unpause_project(uint64)void"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x11fef69e // "change_launchpad_admin(address)void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0xa395fc12 // "get_project(uint64)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,bool,bool,uint64,uint64)"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x7031a298 // "get_investor(address)(address,uint64,uint64,uint64,bool)"
==
bnz main_l14
err
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getinvestorcaster_23
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getprojectcaster_22
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub changelaunchpadadmincaster_21
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unpauseprojectcaster_20
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub pauseprojectcaster_19
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub withdrawamountraisedcaster_18
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimprojectassetcaster_17
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub investcaster_16
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub depositidoassetscaster_15
intc_1 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub listprojectcaster_14
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub fundescrowaddresscaster_13
intc_1 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bootstrapcaster_12
intc_1 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l28
err
main_l28:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// bootstrap
bootstrap_0:
proto 0 0
bytec_3 // "admin_acct"
bytec_0 // ""
app_global_put
bytec_2 // "escrow_address"
bytec_0 // ""
app_global_put
bytec_3 // "admin_acct"
global CreatorAddress
app_global_put
bytec_2 // "escrow_address"
global CurrentApplicationAddress
app_global_put
retsub

// fund_escrow_address
fundescrowaddress_1:
proto 1 0
frame_dig -1
gtxns Amount
intc_0 // 0
>
assert
frame_dig -1
gtxns Receiver
bytec_2 // "escrow_address"
app_global_get
==
assert
frame_dig -1
gtxns TypeEnum
intc_1 // pay
==
assert
retsub

// list_project
listproject_2:
proto 7 0
bytec_0 // ""
dup
intc_0 // 0
dupn 8
bytec_0 // ""
dup
frame_dig -7
txnas Assets
asset_params_get AssetDecimals
store 0
intc_0 // 0
!=
// A valid asset ID must be provided
assert
frame_dig -3
intc_0 // 0
>
// Asset price must be greater than 0
assert
frame_dig -2
intc_0 // 0
>
// Min. and max. investment must be greater than 0
assert
frame_dig -1
intc_0 // 0
>
// Min. and max. investment must be greater than 0
assert
frame_dig -2
frame_dig -1
<
// Min. investment must be lesser than max. investment
assert
frame_dig -6
global LatestTimestamp
>
// Start, end and claim times must be greater than current time
assert
frame_dig -5
global LatestTimestamp
>
// Start, end and claim times must be greater than current time
assert
frame_dig -4
global LatestTimestamp
>
// Start, end and claim times must be greater than current time
assert
frame_dig -6
frame_dig -5
<
// Start time must be less than end time
assert
frame_dig -4
frame_dig -6
>
// Claim time must be greater than start and end time
assert
frame_dig -4
frame_dig -5
>
// Claim time must be greater than start and end time
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field AssetAmount
bytec_2 // "escrow_address"
app_global_get
itxn_field AssetReceiver
frame_dig -7
txnas Assets
itxn_field XferAsset
itxn_submit
txn Sender
frame_bury 1
frame_dig 1
len
intc_2 // 32
==
assert
frame_dig -7
txnas Assets
frame_bury 2
intc_0 // 0
frame_bury 3
intc_0 // 0
frame_bury 4
intc_0 // 0
!
!
frame_bury 5
intc_0 // 0
!
!
frame_bury 6
intc_0 // 0
frame_bury 7
intc_0 // 0
frame_bury 8
frame_dig 1
frame_dig -6
itob
concat
frame_dig -5
itob
concat
frame_dig -4
itob
concat
frame_dig 2
itob
concat
frame_dig -3
itob
concat
frame_dig -2
itob
concat
frame_dig -1
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 5
setbit
intc_1 // 1
frame_dig 6
setbit
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_bury 0
frame_dig -7
txnas Assets
itob
box_del
pop
frame_dig -7
txnas Assets
itob
frame_dig 0
box_put
retsub

// deposit_ido_assets
depositidoassets_3:
proto 2 0
bytec_0 // ""
dup
intc_0 // 0
dupn 14
bytec_0 // ""
dup
frame_dig -1
txnas Assets
itob
box_get
store 2
store 1
load 2
assert
load 1
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
txn Sender
frame_dig 1
==
// Transaction sender must be the project owner.
assert
frame_dig -2
gtxns AssetAmount
intc_0 // 0
>
assert
frame_dig -2
gtxns AssetReceiver
bytec_2 // "escrow_address"
app_global_get
==
assert
frame_dig -2
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig -2
gtxns XferAsset
frame_dig -1
txnas Assets
==
assert
frame_dig -2
gtxns Sender
frame_dig 1
==
assert
frame_dig 0
intc_2 // 32
extract_uint64
frame_bury 2
frame_dig 0
pushint 40 // 40
extract_uint64
frame_bury 3
frame_dig 0
intc_3 // 48
extract_uint64
frame_bury 4
frame_dig 0
pushint 56 // 56
extract_uint64
frame_bury 5
frame_dig 0
pushint 64 // 64
extract_uint64
frame_bury 6
frame_dig 0
pushint 72 // 72
extract_uint64
frame_bury 7
frame_dig 0
pushint 80 // 80
extract_uint64
frame_bury 8
frame_dig 0
pushint 88 // 88
extract_uint64
frame_bury 9
frame_dig -2
gtxns AssetAmount
frame_bury 10
frame_dig 0
intc 4 // 832
getbit
frame_bury 11
frame_dig 0
intc 5 // 833
getbit
frame_bury 12
frame_dig 0
pushint 105 // 105
extract_uint64
frame_bury 13
frame_dig 0
pushint 113 // 113
extract_uint64
frame_bury 14
frame_dig 10
frame_dig 6
*
frame_bury 9
frame_dig 1
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 11
setbit
intc_1 // 1
frame_dig 12
setbit
concat
frame_dig 13
itob
concat
frame_dig 14
itob
concat
frame_bury 0
frame_dig -1
txnas Assets
itob
box_del
pop
frame_dig -1
txnas Assets
itob
frame_dig 0
box_put
retsub

// invest
invest_4:
proto 2 0
bytec_0 // ""
dupn 2
intc_0 // 0
dupn 12
bytec_0 // ""
intc_0 // 0
dupn 5
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -2
txnas Assets
itob
box_len
store 4
store 3
load 4
// A valid project ID must be provided
assert
frame_dig -2
txnas Assets
itob
box_get
store 6
store 5
load 6
assert
load 5
frame_bury 1
bytec_2 // "escrow_address"
app_global_get
frame_dig -2
txnas Assets
asset_holding_get AssetBalance
store 7
intc_0 // 0
>
// Project assets must be available in escrow.
assert
frame_dig 1
extract 0 32
frame_bury 2
frame_dig 1
intc_2 // 32
extract_uint64
frame_bury 3
frame_dig 1
pushint 40 // 40
extract_uint64
frame_bury 4
frame_dig 1
intc_3 // 48
extract_uint64
frame_bury 5
frame_dig 1
pushint 56 // 56
extract_uint64
frame_bury 6
frame_dig 1
pushint 64 // 64
extract_uint64
frame_bury 7
frame_dig 1
pushint 72 // 72
extract_uint64
frame_bury 8
frame_dig 1
pushint 80 // 80
extract_uint64
frame_bury 9
frame_dig 1
pushint 88 // 88
extract_uint64
frame_bury 10
frame_dig 1
pushint 96 // 96
extract_uint64
frame_bury 11
frame_dig 1
intc 4 // 832
getbit
frame_bury 12
frame_dig 1
intc 5 // 833
getbit
frame_bury 13
frame_dig 1
pushint 105 // 105
extract_uint64
frame_bury 14
frame_dig 1
pushint 113 // 113
extract_uint64
frame_bury 15
frame_dig 12
intc_0 // 0
==
assert
frame_dig 15
frame_dig 10
<
// Total amount raised must be less than Max. cap
assert
global LatestTimestamp
frame_dig 3
>=
// Project must be live and ongoing.
assert
global LatestTimestamp
frame_dig 4
<
// Project must be live and ongoing.
assert
frame_dig -1
gtxns Amount
intc_0 // 0
!=
assert
frame_dig -1
gtxns Amount
frame_dig 8
>=
assert
frame_dig -1
gtxns Amount
frame_dig 9
<=
assert
frame_dig -1
gtxns Receiver
bytec_2 // "escrow_address"
app_global_get
==
assert
frame_dig -1
gtxns TypeEnum
intc_1 // pay
==
assert
txn Sender
frame_bury 16
frame_dig 16
len
intc_2 // 32
==
assert
frame_dig -2
txnas Assets
frame_bury 17
frame_dig -1
gtxns Amount
frame_bury 18
intc_0 // 0
!
!
frame_bury 19
intc_0 // 0
frame_bury 20
frame_dig 18
frame_dig 7
/
frame_bury 20
frame_dig 16
frame_dig 17
itob
concat
frame_dig 18
itob
concat
frame_dig 20
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 19
setbit
concat
frame_bury 0
frame_dig 16
box_del
pop
frame_dig 16
frame_dig 0
box_put
frame_dig 11
frame_dig 20
-
frame_bury 14
frame_dig 15
frame_dig 18
+
frame_bury 15
frame_dig 2
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
itob
concat
frame_dig 11
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 12
setbit
intc_1 // 1
frame_dig 13
setbit
concat
frame_dig 14
itob
concat
frame_dig 15
itob
concat
frame_bury 1
frame_dig -2
txnas Assets
itob
box_del
pop
frame_dig -2
txnas Assets
itob
frame_dig 1
box_put
retsub

// claim_project_asset
claimprojectasset_5:
proto 1 0
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dupn 5
bytec_0 // ""
dup
txn Sender
box_len
store 9
store 8
load 9
assert
frame_dig -1
txnas Assets
itob
box_len
store 11
store 10
load 11
assert
txn Sender
box_get
store 13
store 12
load 13
assert
load 12
frame_bury 0
frame_dig -1
txnas Assets
itob
box_get
store 15
store 14
load 15
assert
load 14
frame_bury 1
frame_dig 1
intc_3 // 48
extract_uint64
frame_bury 2
global LatestTimestamp
frame_dig 2
>
assert
frame_dig 0
extract 0 32
frame_bury 3
frame_dig 0
intc_2 // 32
extract_uint64
frame_bury 4
frame_dig 0
pushint 40 // 40
extract_uint64
frame_bury 5
frame_dig 0
intc_3 // 48
extract_uint64
frame_bury 6
frame_dig 0
pushint 448 // 448
getbit
frame_bury 7
frame_dig 3
txn Sender
==
assert
frame_dig 4
frame_dig -1
txnas Assets
==
assert
frame_dig 5
intc_0 // 0
>
assert
frame_dig 6
intc_0 // 0
>
assert
frame_dig 7
intc_0 // 0
==
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
frame_dig 6
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
frame_dig -1
txnas Assets
itxn_field XferAsset
itxn_submit
intc_1 // 1
!
!
frame_bury 7
frame_dig 3
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 7
setbit
concat
frame_bury 0
frame_dig 3
box_del
pop
frame_dig 3
frame_dig 0
box_put
retsub

// withdraw_amount_raised
withdrawamountraised_6:
proto 1 0
bytec_0 // ""
dup
intc_0 // 0
dupn 16
bytec_0 // ""
dup
frame_dig -1
itob
box_len
store 17
store 16
load 17
assert
frame_dig -1
itob
box_get
store 19
store 18
load 19
assert
load 18
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
intc_2 // 32
extract_uint64
frame_bury 2
frame_dig 0
pushint 40 // 40
extract_uint64
frame_bury 3
frame_dig 0
intc_3 // 48
extract_uint64
frame_bury 4
frame_dig 0
pushint 56 // 56
extract_uint64
frame_bury 5
frame_dig 0
pushint 64 // 64
extract_uint64
frame_bury 6
frame_dig 0
pushint 72 // 72
extract_uint64
frame_bury 7
frame_dig 0
pushint 80 // 80
extract_uint64
frame_bury 8
frame_dig 0
pushint 88 // 88
extract_uint64
frame_bury 9
frame_dig 0
pushint 96 // 96
extract_uint64
frame_bury 10
frame_dig 0
intc 4 // 832
getbit
frame_bury 11
frame_dig 0
intc 5 // 833
getbit
frame_bury 12
frame_dig 0
pushint 105 // 105
extract_uint64
frame_bury 13
frame_dig 0
pushint 113 // 113
extract_uint64
frame_bury 14
txn Sender
frame_dig 1
==
assert
frame_dig 14
intc_0 // 0
>
assert
global LatestTimestamp
frame_dig 3
>
assert
pushint 10 // 10
frame_bury 15
intc_0 // 0
frame_bury 16
frame_dig 14
frame_dig 14
frame_dig 15
*
pushint 100 // 100
/
-
frame_bury 16
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig 16
itxn_field Amount
frame_dig 1
itxn_field Receiver
itxn_submit
intc_1 // 1
!
!
frame_bury 12
frame_dig 1
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 11
setbit
intc_1 // 1
frame_dig 12
setbit
concat
frame_dig 13
itob
concat
frame_dig 14
itob
concat
frame_bury 0
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 0
box_put
retsub

// pause_project
pauseproject_7:
proto 1 0
bytec_0 // ""
dup
intc_0 // 0
dupn 14
bytec_0 // ""
dup
bytec_3 // "admin_acct"
app_global_get
txn Sender
==
assert
frame_dig -1
itob
box_len
store 21
store 20
load 21
assert
frame_dig -1
itob
box_get
store 23
store 22
load 23
assert
load 22
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
intc_2 // 32
extract_uint64
frame_bury 2
frame_dig 0
pushint 40 // 40
extract_uint64
frame_bury 3
frame_dig 0
intc_3 // 48
extract_uint64
frame_bury 4
frame_dig 0
pushint 56 // 56
extract_uint64
frame_bury 5
frame_dig 0
pushint 64 // 64
extract_uint64
frame_bury 6
frame_dig 0
pushint 72 // 72
extract_uint64
frame_bury 7
frame_dig 0
pushint 80 // 80
extract_uint64
frame_bury 8
frame_dig 0
pushint 88 // 88
extract_uint64
frame_bury 9
frame_dig 0
pushint 96 // 96
extract_uint64
frame_bury 10
frame_dig 0
intc 4 // 832
getbit
frame_bury 11
frame_dig 0
intc 5 // 833
getbit
frame_bury 12
frame_dig 0
pushint 105 // 105
extract_uint64
frame_bury 13
frame_dig 0
pushint 113 // 113
extract_uint64
frame_bury 14
frame_dig 11
intc_0 // 0
==
assert
intc_1 // 1
!
!
frame_bury 11
frame_dig 1
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 11
setbit
intc_1 // 1
frame_dig 12
setbit
concat
frame_dig 13
itob
concat
frame_dig 14
itob
concat
frame_bury 0
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 0
box_put
retsub

// unpause_project
unpauseproject_8:
proto 1 0
bytec_0 // ""
dup
intc_0 // 0
dupn 14
bytec_0 // ""
dup
bytec_3 // "admin_acct"
app_global_get
txn Sender
==
assert
frame_dig -1
itob
box_len
store 25
store 24
load 25
assert
frame_dig -1
itob
box_get
store 27
store 26
load 27
assert
load 26
frame_bury 0
frame_dig 0
extract 0 32
frame_bury 1
frame_dig 0
intc_2 // 32
extract_uint64
frame_bury 2
frame_dig 0
pushint 40 // 40
extract_uint64
frame_bury 3
frame_dig 0
intc_3 // 48
extract_uint64
frame_bury 4
frame_dig 0
pushint 56 // 56
extract_uint64
frame_bury 5
frame_dig 0
pushint 64 // 64
extract_uint64
frame_bury 6
frame_dig 0
pushint 72 // 72
extract_uint64
frame_bury 7
frame_dig 0
pushint 80 // 80
extract_uint64
frame_bury 8
frame_dig 0
pushint 88 // 88
extract_uint64
frame_bury 9
frame_dig 0
pushint 96 // 96
extract_uint64
frame_bury 10
frame_dig 0
intc 4 // 832
getbit
frame_bury 11
frame_dig 0
intc 5 // 833
getbit
frame_bury 12
frame_dig 0
pushint 105 // 105
extract_uint64
frame_bury 13
frame_dig 0
pushint 113 // 113
extract_uint64
frame_bury 14
frame_dig 11
intc_1 // 1
==
assert
intc_0 // 0
!
!
frame_bury 11
frame_dig 1
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
itob
concat
frame_dig 9
itob
concat
frame_dig 10
itob
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig 11
setbit
intc_1 // 1
frame_dig 12
setbit
concat
frame_dig 13
itob
concat
frame_dig 14
itob
concat
frame_bury 0
frame_dig -1
itob
box_del
pop
frame_dig -1
itob
frame_dig 0
box_put
retsub

// change_launchpad_admin
changelaunchpadadmin_9:
proto 1 0
txn Sender
bytec_3 // "admin_acct"
app_global_get
==
assert
bytec_3 // "admin_acct"
frame_dig -1
app_global_put
retsub

// get_project
getproject_10:
proto 1 1
bytec_0 // ""
frame_dig -1
itob
box_get
store 29
store 28
load 29
assert
load 28
frame_bury 0
retsub

// get_investor
getinvestor_11:
proto 1 1
bytec_0 // ""
frame_dig -1
box_get
store 31
store 30
load 31
assert
load 30
frame_bury 0
retsub

// bootstrap_caster
bootstrapcaster_12:
proto 0 0
callsub bootstrap_0
retsub

// fund_escrow_address_caster
fundescrowaddresscaster_13:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
callsub fundescrowaddress_1
retsub

// list_project_caster
listprojectcaster_14:
proto 0 0
intc_0 // 0
dupn 6
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
btoi
frame_bury 3
txna ApplicationArgs 5
btoi
frame_bury 4
txna ApplicationArgs 6
btoi
frame_bury 5
txna ApplicationArgs 7
btoi
frame_bury 6
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
callsub listproject_2
retsub

// deposit_ido_assets_caster
depositidoassetscaster_15:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 0
frame_dig 1
callsub depositidoassets_3
retsub

// invest_caster
investcaster_16:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
frame_dig 1
callsub invest_4
retsub

// claim_project_asset_caster
claimprojectassetcaster_17:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub claimprojectasset_5
retsub

// withdraw_amount_raised_caster
withdrawamountraisedcaster_18:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub withdrawamountraised_6
retsub

// pause_project_caster
pauseprojectcaster_19:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub pauseproject_7
retsub

// unpause_project_caster
unpauseprojectcaster_20:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub unpauseproject_8
retsub

// change_launchpad_admin_caster
changelaunchpadadmincaster_21:
proto 0 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub changelaunchpadadmin_9
retsub

// get_project_caster
getprojectcaster_22:
proto 0 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 1
frame_dig 1
callsub getproject_10
frame_bury 0
bytec 4 // 0x151f7c75
frame_dig 0
concat
log
retsub

// get_investor_caster
getinvestorcaster_23:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub getinvestor_11
frame_bury 0
bytec 4 // 0x151f7c75
frame_dig 0
concat
log
retsub