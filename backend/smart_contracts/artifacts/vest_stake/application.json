{
    "hints": {
        "bootstrap(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "fund_escrow_address(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_stake_amounts(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_annual_rate(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "stake(asset,uint64,axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "un_stake(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_staker(address)(address,uint64,uint64,bool,uint64,uint64)": {
            "read_only": true,
            "structs": {
                "output": {
                    "name": "Staker",
                    "elements": [
                        [
                            "address",
                            "address"
                        ],
                        [
                            "amount",
                            "uint64"
                        ],
                        [
                            "asset_id",
                            "uint64"
                        ],
                        [
                            "is_staking",
                            "bool"
                        ],
                        [
                            "start_timestamp",
                            "uint64"
                        ],
                        [
                            "end_timestamp",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 4
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "admin_acct": {
                    "type": "bytes",
                    "key": "admin_acct",
                    "descr": ""
                },
                "annual_rate": {
                    "type": "uint64",
                    "key": "annual_rate",
                    "descr": ""
                },
                "escrow_address": {
                    "type": "bytes",
                    "key": "escrow_address",
                    "descr": ""
                },
                "max_stake": {
                    "type": "uint64",
                    "key": "max_stake",
                    "descr": ""
                },
                "min_stake": {
                    "type": "uint64",
                    "key": "min_stake",
                    "descr": ""
                },
                "vest_decimals": {
                    "type": "uint64",
                    "key": "vest_decimals",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "vest_stake",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "fund_escrow_address",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn",
                        "desc": "The payment transaction to fund the escrow address."
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Fund escrow address with Algos."
            },
            {
                "name": "set_stake_amounts",
                "args": [
                    {
                        "type": "uint64",
                        "name": "min_stake"
                    },
                    {
                        "type": "uint64",
                        "name": "max_stake"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_annual_rate",
                "args": [
                    {
                        "type": "uint64",
                        "name": "new_annual_rate"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "stake",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "stake_duration"
                    },
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "un_stake",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_staker",
                "args": [
                    {
                        "type": "address",
                        "name": "staker"
                    }
                ],
                "returns": {
                    "type": "(address,uint64,uint64,bool,uint64,uint64)"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}