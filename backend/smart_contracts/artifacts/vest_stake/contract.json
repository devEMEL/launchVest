{
    "name": "vest_stake",
    "methods": [
        {
            "name": "bootstrap",
            "args": [
                {
                    "type": "asset",
                    "name": "asset",
                    "desc": "The unique asset ID to be opted into by the escrow address."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Initializes Vest Stake application's global state, sets admin account, escrow address, asset decimal, and\nopts into the provided asset."
        },
        {
            "name": "fund_escrow_address",
            "args": [
                {
                    "type": "pay",
                    "name": "txn",
                    "desc": "The payment transaction to fund the escrow address."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Fund escrow address with Algos."
        },
        {
            "name": "set_stake_amounts",
            "args": [
                {
                    "type": "uint64",
                    "name": "min_stake",
                    "desc": "The minimum stake amount."
                },
                {
                    "type": "uint64",
                    "name": "max_stake",
                    "desc": "The maximum stake amount."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Sets the minimum and maximum stake amounts for staking."
        },
        {
            "name": "set_annual_rate",
            "args": [
                {
                    "type": "uint64",
                    "name": "annual_rate",
                    "desc": "The annual rate."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Sets the annual rate."
        },
        {
            "name": "set_asset_decimal",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_decimal",
                    "desc": "The asset decimal."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Sets the asset decimal."
        },
        {
            "name": "set_asset_id",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_id",
                    "desc": "The unique asset ID."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Sets the asset ID."
        },
        {
            "name": "stake",
            "args": [
                {
                    "type": "asset",
                    "name": "asset",
                    "desc": "The asset to be staked."
                },
                {
                    "type": "uint64",
                    "name": "stake_duration",
                    "desc": "The duration of the stake."
                },
                {
                    "type": "axfer",
                    "name": "txn",
                    "desc": "The transaction object for the staking operation."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Initiates a stake for the specified asset and duration."
        },
        {
            "name": "un_stake",
            "args": [
                {
                    "type": "asset",
                    "name": "asset",
                    "desc": "The asset to be unstaked."
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Initiates the unstaking of the specified asset."
        },
        {
            "name": "get_staker",
            "args": [
                {
                    "type": "address",
                    "name": "staker",
                    "desc": "The stakers address."
                }
            ],
            "returns": {
                "type": "(address,uint64,uint64,bool,uint64,uint64)"
            },
            "desc": "Retrieves staker information for the specified staker address and stores it in the output."
        }
    ],
    "networks": {}
}